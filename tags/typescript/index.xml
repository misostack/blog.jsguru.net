<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>typescript on 1 hour of deep work is better than 8 hours of shallow work</title><link>https://blog.jsguru.net/tags/typescript/</link><description>Recent content in typescript on 1 hour of deep work is better than 8 hours of shallow work</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 05 Aug 2022 15:07:40 +0700</lastBuildDate><atom:link href="https://blog.jsguru.net/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>How to Use Typescript Path Alias in Loopback 4</title><link>https://blog.jsguru.net/post/how-to-use-typescript-path-alias-in-loopback-4/</link><pubDate>Fri, 05 Aug 2022 15:07:40 +0700</pubDate><guid>https://blog.jsguru.net/post/how-to-use-typescript-path-alias-in-loopback-4/</guid><description>The problem In Node.js (or TS/JS in general) you can import single modules into your code. This might look the following:
import { Example } from &amp;#34;../example/model&amp;#34;; import { Article } from &amp;#34;../article/model&amp;#34;; The problem we have here is that the deeper your project tree is the more &amp;lsquo;../&amp;rsquo; are required to access modules in higher layers. Actually, this doesn&amp;rsquo;t look very beautiful to be honest. Fortunately we can change that.</description></item></channel></rss>